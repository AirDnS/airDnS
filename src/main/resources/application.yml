spring:
  datasource:
    driver-class-name: ${DB_DRIVER}
    username: ${DB_USER}
    url: ${DB_URL}
    password: ${DB_PASSWORD}
  jackson:
    time-zone: Asia/Seoul
  jpa:
    properties:
      hibernate:
        format_sql: 'true'
        use_sql_comments: 'true'
        show_sql: 'true'
        default_batch_fetch_size: 20
        dialect: MySQLDialect
    hibernate:
      ddl-auto: update
  jwt:
    secret: ${JWT_SECRET}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  servlet:
    multipart:
      max-file-size: 10MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 100MB # 한개 요청의 최대 사이즈 (default: 10MB)
  #swagger
  mvc:
    path match:
      matching-strategy: ant_path_matcher

  #OAuth 2.0
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userInfoAuthenticationMethod: header
            userNameAttribute: id


#spring docs

springdoc:
  swagger-ui:
    tags-sorter: alpha

#TOSS Payment
payment :
  toss :
    client_api_key : ${CLIENT_API_KEY}
    secret_api_key : ${WIDGET_SECRET_KEY}
    url: "https://api.tosspayments.com/v1/payments/confirm"
    success_url : "http://localhost:8080/api/v1/payments/toss/success"
    fail_url : "http://localhost:8080/api/v1/payments/toss/fail"
    
#AWS S3
cloud:
  aws:
    s3:
      bucket: ${AWS_BUCKET_NAME}
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${AWS_ACCESSKEY}
      secretKey: ${AWS_SECRETKEY}

